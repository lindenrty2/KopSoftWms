@using YL.Utils.Json;
@{
    Layout = "_LayoutH";
    @model YL.Core.Entity.Wms_stockout
}
@section styles{
    <link rel="stylesheet" href="~/css/bootstrap-select.min.css" />
}
<div id="app" v-cloak>
    <div>
        <button id="lockL" type="button" class="btn btn-outL margin-left:20px" onclick="app.lockL(true);">锁定</button>
        <button id="box1OutL" type="button" class="btn btn-outL margin-left:20px" onclick="app.boxOutL(true);">料箱出库</button>
        <button id="scanL" type="button" class="btn btn-scanL" onclick="app.scanL();">扫码操作</button>
        <span id="ctlOutedBoxList">

        </span>
        <button id="complateL" type="button" class="btn btn-scanL" onclick="app.complateL();">出库完成</button>
    </div>
    <table id="bootstraptable" class="table table-bordered text-nowrap table-hover"></table>
</div>

@section scripts{
    <script src="~/js/bootstrap-select.min.js"></script>
    <script src="~/js/defaults-zh_CN.min.js"></script>
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                datemin: '',
                datemax: '',
                StockOutId: "@Model.StockOutId",
                StockOutNo: "@Model.StockOutNo",
                storeId: '@ViewData["currentStoreId"]',
                urlM: '',
                storeId: '0'
            },
            mounted: function () {
                _self = this;
                _self.$nextTick(function () {
                    _self.$refs.storeId = '@ViewData["currentStoreId"]';

                    _self.$refs.datemin = "1900-01-01";
                    _self.$refs.datemax = "2099-01-01";
                    var obj = [{
                        checkbox: true,             //是否显示复选框
                        visible: true
                    },
                    {
                        field: 'Detail.StockOutDetailId',
                        title: '详细ID',
                        visible: false
                    },
                    {
                        field: 'Detail.Status',
                        title: '状态',
                        visible: true,
                        sortable: true,
                        formatter: function (value, row, index) {
                            var html = [];
                            if(value == -1) {
                                return '<span class="label label-danger radius">已取消</span>';
                            }
                            else if (value == 1) { //任务创建中
                                return '<span class="label label-default radius">任务创建中</span>';
                            }
                            else if (value == 2) { //待操作
                                return '<span class="label label-default radius">待操作</span>';
                            }
                            else if (value == 3) { //进行中
                                return '<span class="label label-primary radius">进行中</span>';
                            }
                            else if (value == 4) { //已完成
                                return '<span class="label label-success radius">已完成</span>';
                            }
                            return html.join('');
                        },

                    },
                    {
                        field: 'Detail.MaterialNo',
                        title: '物料编号',
                        align: 'center',
                        sortable: true
                    },
                    {
                        field: 'Detail.MaterialName',
                        title: '物料名称',
                        align: 'center',
                        sortable: true
                    },
                    {
                        field: 'Detail.PlanOutQty',
                        title: '计划数量',
                        align: 'center',
                        sortable: true
                    }
                    , {
                        field: 'Detail.ActOutQty',
                        title: '实际数量',
                        align: 'center',
                        sortable: true
                    },
                    {
                        field: 'Detail.Remark',
                        title: '备注',
                        align: 'left',
                        sortable: true
                    },
                    {
                        field: 'Detail.ModifiedDate',
                        title: '最后更新时间',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    },
                    {
                        field: 'Tasks',
                        title: '操作',
                        visible: true,
                        sortable: true,
                        formatter: function (value, row, index) {
                            var html = [];
                            for (var i = 0; i < value.length; i++) {
                                var item = value[i];
                                if (item.TaskStatus == 1) { //任务已确认
                                }
                                else if (item.TaskStatus == 2) { //出库中
                                    html.push(
                                        '<span class="label label-primary radius">料箱[' + item.InventoryBoxName + ']出库中</span>'
                                    );
                                }
                                else if (item.TaskStatus == 3) { //出库完成
                                    html.push(
                                        '<span class="label label-primary radius">料箱[' + item.InventoryBoxName + ']出库完成</span>'
                                    );
                                    app.addOutedBox(item.InventoryBoxTaskId, item.InventoryBoxName);
                                }
                                else if (item.TaskStatus == 4) { //归库中
                                    html.push(
                                        '<span class="label label-primary radius">料箱[' + item.InventoryBoxName + ']归库中</span>'
                                    );
                                    app.removeOutedBox(item.InventoryBoxTaskId);
                                }
                                else if (item.TaskStatus == 5) { //归库完成
                                    html.push(
                                        '<span class="label label-success radius">料箱[' + item.InventoryBoxName + ']归库完成</span>'
                                    );
                                    app.removeOutedBox(item.InventoryBoxTaskId);
                                }
                            }
                            return html.join('<br/>');
                        },
                        events: {
                        },
                    }
                    ];
                    var qParams = {
                        pid: "@Model.StockOutId"
                    };
                    yui.table("bootstraptable", "/StockOut/WorkList", obj, "GET", "StockOutDetailId", true, qParams);
                });
            },
            computed: {
                count: function () {
                    return this.strLength(this.Remark, false);
                }
            },
            watch: {},
            methods: {
                addOutedBox: function (ibTaskId, ibTaskName) {
                    $("#ob" + ibTaskId).remove();
                    $("#ctlOutedBoxList").append('<button id="ob' + ibTaskId + '" type="button" class="btn btn-backL" style="margin-left:3px" onclick="app.boxBackL(\'' + ibTaskId + '\');">料箱[' + ibTaskName + ']归库</button>');

                },
                removeOutedBox: function (ibTaskId) {
                    $("#ob" + ibTaskId).remove();
                },
                boxOutL: function (isfullbox) {
                    var index = layer.confirm("您确定要出库料箱吗？", { btn: ["确定", "取消"] }, function () {
                        layer.close(index);
                        
                        var url = "/InventoryBox/DoStockOutBoxOut";
                        var data = {
                            storeId: '@ViewData["currentStoreId"]',
                            stockOutId: '@Model.StockOutId'
                        };
                        yui.$axiospostform(url, data)
                            .then(function (response) {
                                if (response.data.isSccuess) {
                                    layer.msg(response.data.message, { icon: 1, time: 1000 });
                                    return false;
                                }
                                else {
                                    layer.msg(response.data.message, { icon: 5 });
                                }
                                layer.close(index);
                            })
                            .catch(function (error) {
                                layer.close(index);
                            });
                    }, function () {

                    });
                },
                lockL: function () {
                    var index = layer.confirm("是否要锁定此订单？", { btn: ["确定", "取消"] }, function () {
                        layer.close(index);
                        
                        var url = "/StockOut/DoLock";
                        var data = {
                            storeId: '@ViewData["currentStoreId"]',
                            StockOutId: '@Model.StockOutId'
                        };
                        yui.$axiospostform(url, data)
                            .then(function (response) {
                                if (response.data.isSccuess) {
                                    layer.msg(response.data.message, { icon: 1, time: 1000 });
                                    setTimeout(function () {
                                        yui.layer_close3();
                                    }, 1000);
                                    return false;
                                }
                                else {
                                    layer.msg(response.data.message, { icon: 5 });
                                }
                                layer.close(index);
                            })
                            .catch(function (error) {
                                layer.close(index);
                            });
                    }, function () {

                    }); 
                },
                boxBackL: function (taskId) {
                    yui.layershow("料箱归库", "/InventoryBox/StockOutBoxBack?storeId=@ViewData["currentStoreId"]&inventoryboxtaskid=" + taskId, 1000, 800);
                },
                scanL: function (detailId) {
                    yui.layershow("扫码操作", "/StockOut/ScanPage?StockOutId=@Model.StockOutId&storeId=@ViewData["currentStoreId"]", 1000, 800);
                }, 
                complateL: function (isfullbox) {
                    var index = layer.confirm("出库单与实际出库数量不匹配，您确定要将出库单标记为完成吗？", { btn: ["确定", "取消"] }, function () {
                        layer.close(index);
                        
                        var url = "/StockOut/DoComplate";
                        var data = {
                            storeId: '@ViewData["currentStoreId"]',
                            StockOutId: '@Model.StockOutId'
                        };
                        yui.$axiospostform(url, data)
                            .then(function (response) {
                                if (response.data.isSccuess) {
                                    layer.msg(response.data.message, { icon: 1, time: 1000 });
                                    setTimeout(function () {
                                        yui.layer_close3();
                                    }, 1000);
                                    return false;
                                }
                                else {
                                    layer.msg(response.data.message, { icon: 5 });
                                }
                                layer.close(index);
                            })
                            .catch(function (error) {
                                layer.close(index);
                            });
                    }, function () {

                    }); 
                },
                refreshL: function () {
                    $("button[name='refresh']").click();
                }
            }
        });
    </script>
}