@using YL.Utils.Json;
@{
    Layout = "_LayoutH";
    @model YL.Core.Entity.Wms_stockout
}
@section styles{
    <link rel="stylesheet" href="~/css/bootstrap-select.min.css" />
}
<div id="app" v-cloak>
    <div>
        <!--button id="lockL" type="button" class="btn btn-outL margin-left:20px" onclick="app.lockL(true);">锁定</!button-->
        <button id="box1OutL" type="button" class="btn btn-outL margin-left:20px" onclick="app.boxOutL(true);">料箱出库</button>
        <button id="scanL" type="button" class="btn btn-scanL" onclick="app.scanL();">扫码操作</button>
        <span id="ctlOutedBoxList">

        </span>
        <!--button id="complateL" type="button" class="btn btn-scanL" onclick="app.complateL();">出库完成</button-->
    </div>
    <table id="bootstraptable" class="table table-bordered text-nowrap table-hover"></table>
</div>

@section scripts{
    <script src="~/js/bootstrap-select.min.js"></script>
    <script src="~/js/defaults-zh_CN.min.js"></script>
    <script src="~/js/common.wms.js?v=20200627"></script>
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                datemin: '',
                datemax: '',
                StockOutId: "@Model.StockOutId",
                StockOutNo: "@Model.StockOutNo",
                storeId: '@ViewData["currentStoreId"]',
                urlM: '',
                storeId: '0'
            },
            mounted: function () {
                _self = this;
                _self.$nextTick(function () {
                    _self.$refs.storeId = '@ViewData["currentStoreId"]';

                    _self.$refs.datemin = "1900-01-01";
                    _self.$refs.datemax = "2099-01-01";
                    var columns = [
                        { checkbox: true, visible: false }, 
                        {
                            field: 'InventoryBoxNo', title: '料箱编号', sortable: true, formatter: function (value, row, index) {
                                if (row.Status < 0) {
                                    return "<span style='color:red'>" + value + "</span>";
                                }
                                else {
                                    return value;
                                }
                            }
                        },
                        { field: 'InventoryBoxStatus', title: '料箱状态', width: 60, align: 'center', visible: true, sortable: true, formatter: InventoryBoxStatusFormatter },
                        { field: 'StockOutStatus', title: '任务状态', visible: true, sortable: true, formatter: StockStatusFormatter },
                        { field: 'MaterialNo', title: '物料编号', align: 'center', sortable: true },
                        { field: 'MaterialName', title: '物料名称', align: 'center', sortable: true },
                        { field: 'PlanQty', title: '计划数量', align: 'center', sortable: true },
                        { field: 'Qty', title: '实际数量', align: 'center', sortable: true },
                        { field: 'Remark', title: '备注', align: 'left' },
                        { field: 'ModifiedUser', title: '最后更新者', align: 'center', sortable: true},
                        { field: 'ModifiedDate', title: '最后更新时间', align: 'center', sortable: true, formatter: DateTimeFormatter },
                        {
                            field: 'InventoryBoxStatus',
                            title: '操作',
                            visible: true,
                            sortable: false,
                            formatter: function (value, row, index) {
                                var html = [];
                                if (value != null && row.Qty > 0) {
                                    var clz = row.Qty == row.PlanQty ? "btn-success" : "btn-warning";
                                    html.push('<button class="btn ' + clz + ' btn-backL" style="height:22px;padding:0 10px" onclick="app.boxBackL(\'' + row.InventoryBoxTaskId + '\');">操作确认</button>');
                                }
                                return html.join('<br/>');
                            },
                            events: {
                            },
                        }
                    ]; 
                    $("#bootstraptable").bootstrapTable({
                        url: "/StockOut/WorkList",
                        method: "Get", 
                        responseHandler: function (res) {
                            return res.rows;
                        },
                        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                        toolbar: '#materialToolbar', //工具按钮用哪个容器
                        striped: true, //是否显示行间隔色
                        cache: false,
                        sortable: true, //是否启用排序
                        sortOrder: "desc", //排序方式
                        sortName: "MaterialNo",
                        pagination: true, //是否显示分页（*）
                        paginationLoop: true,
                        onlyInfoPagination: false,
                        sidePagination: "client", //分页方式：client客户端分页，server服务端分页（*）
                        maintainSelected: true,
                        pageNumber: 1, //初始化加载第一页，默认第一页,并记录
                        pageSize: 10, //每页的记录行数（*）
                        pageList: [10, 25, 50, 100, 'All'], //可供选择的每页的行数（*）
                        search: true, //是否显示表格搜索
                        strictSearch: false, //设置为 true启用全匹配搜索，否则为模糊搜索。
                        trimOnSearch: true, //设置为 true 将自动去掉搜索字符的前后空格。
                        showPaginationSwitch: false,
                        showColumns: true, //是否显示所有的列（选择显示的列）
                        showHeader: true, //是否显示列头。
                        showFooter: false, //是否显示列脚。
                        showRefresh: true, //是否显示刷新按钮
                        buttonsAlign: "right", //按钮位置
                        singleSelect: false, //设置 true 将禁止多选。
                        clickToSelect: true, //是否启用点击选中行
                        uniqueId: "StockOutDetailId", //每一行的唯一标识，一般为主键列 
                        queryParams: function (params) {
                            return {
                                limit: 2000,    //页面大小
                                offset: 1,  //页码
                                sort: params.sort,      //排序列名
                                order: params.order,    //排序命令（desc，asc）
                                search: params.search,
                                storeId: '@ViewData["currentStoreId"]',
                                pid: "@Model.StockOutId"
                            };
                        },
                        columns: columns
                    });
                });
            },
            computed: {
                count: function () {
                    return this.strLength(this.Remark, false);
                }
            },
            watch: {},
            methods: {
                addOutedBox: function (ibTaskId, ibTaskName) {
                    $("#ob" + ibTaskId).remove();
                    $("#ctlOutedBoxList").append('<button id="ob' + ibTaskId + '" type="button" class="btn btn-backL" style="margin-left:3px" onclick="app.boxBackL(\'' + ibTaskId + '\');">料箱[' + ibTaskName + ']操作确认</button>');

                },
                removeOutedBox: function (ibTaskId) {
                    $("#ob" + ibTaskId).remove();
                },
                boxOutL: function (isfullbox) {
                    var index = layer.confirm("您确定要出库料箱吗？", {
                        btn: ["平衡出库", "出库左边", "出库右边", "取消"],
                        btn1: function () { layer.close(index); _self.boxOutCoreL(0); },
                        btn2: function () { layer.close(index); _self.boxOutCoreL(1); },
                        btn3: function () { layer.close(index); _self.boxOutCoreL(2); },
                    });
                },
                boxOutCoreL: function (pos) {
                    var url = "/InventoryBox/DoStockOutBoxOut";
                    var data = {
                        storeId: '@ViewData["currentStoreId"]',
                        stockOutId: '@Model.StockOutId',
                        pos : pos
                    };
                    yui.$axiospostform(url, data)
                        .then(function (response) {
                            if (response.data.isSccuess) {
                                layer.msg(response.data.message, { icon: 1, time: 1000 }); 
                            }
                            else {
                                layer.msg(response.data.message, { icon: 5 });
                            }
                            $("#bootstraptable").bootstrapTable('refresh');
                        })
                        .catch(function (error) { 
                        });
                },
                lockL: function () {
                    var index = layer.confirm("是否要锁定此订单？", { btn: ["确定", "取消"] }, function () {
                        layer.close(index);

                        var url = "/StockOut/DoLock";
                        var data = {
                            storeId: '@ViewData["currentStoreId"]',
                            StockOutId: '@Model.StockOutId'
                        };
                        yui.$axiospostform(url, data)
                            .then(function (response) {
                                if (response.data.isSccuess) {
                                    layer.msg(response.data.message, { icon: 1, time: 1000 });
                                    $("#bootstraptable").bootstrapTable('refresh');
                                    setTimeout(function () {
                                        yui.layer_close3();
                                    }, 1000);
                                    return false;
                                }
                                else {
                                    $("#bootstraptable").bootstrapTable('refresh');
                                    layer.msg(response.data.message, { icon: 5 });
                                }
                                layer.close(index);
                            })
                            .catch(function (error) {
                                layer.close(index);
                            });
                    }, function () {

                    });
                },
                boxBackL: function (taskId) {
                    //yui.layershow("料箱操作确认", "/InventoryBox/StockOutBoxBack?storeId=@ViewData["currentStoreId"]&inventoryboxtaskid=" + taskId, 1000, 800);
                    layer.open({
                        type: 2, area: ['1000px', '800px'],
                        fix: false, maxmin: true, shade: 0.4, title: "料箱操作确认",
                        content: "/InventoryBox/StockOutBoxBack?storeId=@ViewData["currentStoreId"]&inventoryboxtaskid=",
                        end: function () {
                            $("#bootstraptable").bootstrapTable('refresh');
                        }
                    }); 
                },
                scanL: function (detailId) {
                    //yui.layershow("扫码操作", "/Scan/MainScanPage?stockNo=@Model.StockOutNo&storeId=@ViewData["currentStoreId"]", 1000, 800);
                    layer.open({
                        type: 2, area: ['1000px', '800px'],
                        fix: false, maxmin: true, shade: 0.4, title: "扫码操作",
                        content: "/Scan/MainScanPage?stockNo=@Model.StockOutNo&storeId=@ViewData["currentStoreId"]",
                        end: function () {
                            $("#bootstraptable").bootstrapTable('refresh');
                        }
                    }); 
                },
                complateL: function (isfullbox) {
                    var index = layer.confirm("出库单与实际出库数量不匹配，您确定要将出库单标记为完成吗？", { btn: ["确定", "取消"] }, function () {
                        layer.close(index);

                        var url = "/StockOut/DoComplate";
                        var data = {
                            storeId: '@ViewData["currentStoreId"]',
                            StockOutId: '@Model.StockOutId'
                        };
                        yui.$axiospostform(url, data)
                            .then(function (response) {
                                if (response.data.isSccuess) {
                                    layer.msg(response.data.message, { icon: 1, time: 1000 });
                                    setTimeout(function () {
                                        yui.layer_close3();
                                    }, 1000);
                                    return false;
                                }
                                else {
                                    layer.msg(response.data.message, { icon: 5 });
                                }
                                layer.close(index);
                            })
                            .catch(function (error) {
                                layer.close(index);
                            });
                    }, function () {

                    });
                },
                refreshL: function () {
                    $("button[name='refresh']").click();
                }
            }
        });
    </script>
}