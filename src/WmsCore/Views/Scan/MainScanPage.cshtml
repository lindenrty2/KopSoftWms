@{
    Layout = "_LayoutH";
}
@section styles{
    <style>
        .group-header {
            width: 100%;
            height: 32px;
            background: #3c8dbc;
            color: white;
        }

        .group-body {
            margin: 8px
        }
    </style>
    <link rel="stylesheet" href="~/css/bootstrap-select.min.css" />
    <link rel="stylesheet" href="~/css/vue.element.min.css">
}
<div id="app" v-cloak>
    <div class="">
        <div>
            <div class="group-header">
                <label class="control-label">操作区</label>
            </div>
            <div class="group-body">
                <el-switch v-model="IsStockIn" class="control-label col-sm-2" active-text="入库" inactive-text="出库"></el-switch>
                <input type="text" v-model="InputNo" style="width:80%" @@keyup.enter="onInputNo">
            </div>
        </div>
    </div>
    <form class="form-horizontal" onsubmit="return false">
        <div class="">
            <div class="group-header">
                <label class="control-label ">信息区</label>
            </div>
            <div class="group-body">
                <label>单号：</label>
                <input type="text" v-model="StockNo" style="width:10%" readonly="readonly" value="">
                <label>订单号：</label>
                <input type="text" v-model="OrderNo" style="width:10%" readonly="readonly" value="">
                <label>备注：</label>
                <input type="text" v-model="Remark" style="width:50%" readonly="readonly" value=""> 
            </div>
        </div>
        <div>
            <div class="group-header">
                <label class="control-label">料箱信息区</label>
            </div>
            <div class="group-body">
                <label>编号：</label>
                <input type="text" style="width:10%" v-model="InventoryBoxNo" readonly="readonly" value="">
                <label>名称：</label>
                <input type="text" style="width:15%" v-model="InventoryBoxName" readonly="readonly" value="">
            </div>
        </div>
        <div>
            <div class="group-header">
                <label class="control-label">物料信息区</label>
            </div>
            <div class="group-body">
                <el-table :data="tableData"
                          ref="table"
                          tooltip-effect="dark"
                          border
                          stripe>

                    <el-table-column label="序号" type="index" width="60" align="center"></el-table-column>
                    <el-table-column label="物料编号" prop="MaterialNo" align="center"></el-table-column>
                    <el-table-column label="物料名" prop="MaterialName" align="center"></el-table-column>
                    <el-table-column label="现有数" prop="PlanQty" align="center"></el-table-column>
                    <el-table-column label="计划数" prop="PlanQty" align="center"></el-table-column>
                    <el-table-column label="已出库数" prop="ActQty" align="center"></el-table-column>
                    <el-table-column label="操作数量" align="center">
                        <template slot-scope="scope">
                            <input type="number" style="text-align:center;width:100px" v-model="scope.row.Qty" min="1" value="1">
                        </template>
                    </el-table-column>
                    <el-table-column label="操作">
                        <template slot-scope="scope">
                            <el-button size="mini"
                                       type="danger"
                                       v-if="!scope.row.editing"
                                       icon="el-icon-delete"
                                       @@click="handleDelete(scope.$index)">
                                删除
                            </el-button>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
        </div>
        <div class="box-footer">
            <div class="pull-right box-tools">
                <input v-on:click="okL" class="btn btn-primary radius" type="button" v-model="submit">
            </div>
        </div>
    </form>
</div>

@section scripts{
    <script src="~/js/bootstrap-select.min.js"></script>
    <script src="~/js/defaults-zh_CN.min.js"></script>
    <script src="~/js/vue.element.min.js"></script>
    <script src="~/js/common.wms.js"></script>
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                submit: "确定",
                IsStockIn:true,
                InputNo: "",
                StockId: '',
                StockNo: '@ViewBag.StockNo',
                StockDetails: null,
                OrderNo: '',
                Remark: '',
                InventoryBoxId : "0",
                InventoryBoxNo: "未扫描",
                InventoryBoxName: "-",
                InventoryBox: null,
                NewMaterialCount:0,
                InventoryDetails: null,
                tableData: []
            },
            computed: {
                count: function () {
                    return this.strLength(this.Remark, false);
                }
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    if (_self.StockNo != '') {
                        _self.onInputNo(_self.StockNo);
                    }
                });
            },
            methods: {
                handleDelete: function (index) { //删除行数
                    this.tableData.splice(index, 1)
                },
                onInputNo: function (e) {
                    var _self = this;
                    var inputNo = e.srcElement.value;
                    if (inputNo.length == 0) { return; }
                    else if (IsStockInNo(inputNo)) {
                        _self.onStockInNoInputed(inputNo);
                    }
                    else if (IsStockOutNo(inputNo)) {
                        _self.onStockOutNoInputed(inputNo);
                    }
                    else if (IsInventoryBoxNo(inputNo)) {
                        _self.onInventoryBoxNoInputed(inputNo);
                    }
                    else if (IsMaterialNo(inputNo)) {
                        _self.onMaterialNoInputed(inputNo);
                    }
                    app.InputNo = "";
                },
                onStockInNoInputed: function (no) {
                    var url = "/StockIn/Get?no=" + no;
                    _self = this;
                    _self.StockId = "";
                    _self.StockNo = "";
                    _self.OrderNo = "";
                    _self.Remark = "";
                    _self.StockDetails = [];
                    yui.$axiosget(url).then(function (res) {
                        if (!res.data.isSccuess) {
                            layer.msg("入库单查询失败", { icon: 2 });
                        }
                        else {
                            _self.IsStockIn = true;
                            _self.StockId = res.data.StockInId;
                            _self.StockNo = res.data.StockInNo;
                            _self.OrderNo = res.data.OrderNo;
                            _self.Remark = res.data.Remark;
                            _self.StockDetails = res.data.details;
                            _self.updateInventoryBoxDetail();
                        }
                    }).catch(function (res) {
                        layer.msg("入库单查询发生错误" + res.data.message, { icon: 2 });
                    });
                },
                onStockOutNoInputed: function (no) {

                },
                onInventoryBoxNoInputed: function (no) {
                    _self = this;
                    _self.InventoryBoxId = "";
                    _self.InventoryBoxNo = "";
                    _self.InventoryBoxName = "";
                    var url = "/InventoryBox/Get?storeId=@ViewBag.StoreId&inventoryBoxNo=" + no;
                    yui.$axiosget(url).then(function (res) {
                        if (!res.data.isSccuess) {
                            layer.msg("无效料箱编号", { icon: 2 });
                        }
                        else {
                            _self.InventoryBox = res.data.data;
                            _self.InventoryBoxId = res.data.data.inventoryBoxId;
                            _self.InventoryBoxNo = res.data.data.inventoryBoxNo;
                            _self.InventoryBoxName = res.data.data.inventoryBoxName;
                            _self.InventoryDetails = res.data.data.details;
                            _self.updateInventoryBoxDetail();
                        }
                    }).catch(function (res) {
                        layer.msg("料箱查询发生错误" + res, { icon: 2 });
                    });
                },
                onMaterialNoInputed: function (no) {
                    _self = this;
                    if (_self.InventoryBox == null) {
                        layer.msg("请先扫码料箱", { icon: 2 });
                    }
                    for (var i = 0; i < _self.tableData.length; i++) {
                        var material = _self.tableData[i];
                        if (material.MaterialNo == no) {
                            material.Qty = parseInt(material.Qty) + 1;
                            return;
                        }
                    }
                    if (!_self.IsStockIn) {
                        layer.msg("料箱中没有该物料", { icon: 2 });
                        return;
                    }
                    if (_self.InventoryBox.Size > _self.InventoryDetails.length + _self.NewMaterialCount + 1) {
                        layer.msg("料箱无法装载更多物料", { icon: 2 });
                    }
                    if (this.StockDetails != null) {
                        for (var stockDetail in this.StockDetails) {
                            if (stockDetail.materialNo != no) {
                                continue;
                            }
                            var list = {
                                InventoryId: null,
                                MaterialId: stockDetail.materialId,
                                MaterialNo: stockDetail.materialNo,
                                MaterialName: stockDetail.materialName,
                                IsLocked: false,
                                PlanQty: stockDetail.PlanQty,
                                ActQty: stockDetail.ActQty,
                                Qty: 1,
                            }
                            this.tableData.unshift(list);
                            NewMaterialCount += 1;
                            return;
                        }
                        layer.msg("入库单中没有该物料", { icon: 2 });
                    }
                    else {
                        var url = "/Material/SearchMaterialNo?storeId=@ViewBag.StoreId&materialNo=" + no;
                        yui.$axiosget(url).then(function (res) {
                            if (!res.data.isSccuess) {
                                layer.msg(res.data.message, { icon: 2 });
                            }
                            else {
                                var list = {
                                    InventoryId:null,
                                    MaterialId: res.data.data.materialId,
                                    MaterialNo: res.data.data.materialNo,
                                    MaterialName: res.data.data.materialName,
                                    IsLocked: false,
                                    OrderNo: res.data.data.orderNo,
                                    PlanQty: 0,
                                    ActQty: 0,
                                    Qty: 1,
                                }
                                _self.tableData.unshift(list);
                            }
                        }).catch(function (res) {
                            layer.msg("物料查询发生错误" + res, { icon: 2 });
                        });
                    }
                },
                updateInventoryBoxDetail: function () {
                    this.tableData = [];
                    if (this.InventoryDetails == null) return;
                    if (this.StockDetails == null) { //无单出入库，直接列表所有物料
                        for (var inventoryDetail in this.InventoryDetails) {
                            var list = {
                                InventoryId: inventoryDetail.inventoryId,
                                MaterialId: inventoryDetail.materialId,
                                MaterialNo: inventoryDetail.materialNo,
                                MaterialName: inventoryDetail.materialName,
                                IsLocked: inventoryDetail.isLocked,
                                PlanQty: 0,
                                ActQty: 0,
                                Qty: 0,
                            }
                            this.tableData.unshift(list);
                        }
                    }
                    else { //有单出入库
                        if (this.IsStockIn) return; //有单入库时初始不显示任何物料，等待关联
                        for (var inventoryDetail in this.InventoryDetails) {
                            var canOutput = false;
                            for (var stockDetail in this.StockDetails) {
                                if (stockDetail.MaterialId != inventoryDetail.MaterialId) continue;
                                if (this.OrderNo != inventoryDetail.OrderNo) continue;
                                canOutput = true;
                            }
                            if (!canOutput) continue;
                            var list = {
                                InventoryId: inventoryDetail.inventoryId,
                                MaterialId: inventoryDetail.materialId,
                                MaterialNo: inventoryDetail.materialNo,
                                MaterialName: inventoryDetail.materialName,
                                IsLocked: inventoryDetail.isLocked,
                                PlanInQty: 0,
                                ActInQty: 0,
                                Qty: 0,
                            }
                            this.tableData.unshift(list);
                        }

                    }
                },
                okL: function () {
                    var _self = this;
                    if (_self.InventoryBoxNo.length <= 0) {
                        layer.msg("请扫码料箱", { icon: 2 });
                        return false;
                    }
                    if (_self.tableData.length == 0) {
                        layer.msg("请扫码物料", { icon: 2 });
                        return false;
                    }

                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                    var data = null;
                    var url = null;
                    if (IsStockIn) {
                        url = '/StockIn/DoScanComplate';
                        data = {
                            stockInId: _self.StockId,
                            inventoryBoxId: _self.InventoryBoxId,
                            materials: _self.tableData,
                            remark: _self.Remark
                        };
                    }
                    else {
                        url = '/StockOut/DoScanComplate';
                        data = {
                            stockOutId: _self.StockId,
                            inventoryBoxId: _self.InventoryBoxId,
                            materials: _self.tableData,
                            remark: _self.Remark
                        };
                    }

                    yui.$axiospostform(url, data)
                        .then(function (response) {
                            if (response.data.isSccuess) {
                                parent.app.refreshL();
                                layer.msg("", { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 1000);
                                return false;
                            }
                            else {
                                layer.msg(response.data.message, { icon: 5 });
                            }
                            layer.close(index);
                        })
                        .catch(function (error) {
                            layer.close(index);
                        });
                },
                refresh: function (id) {
                }
            }
        });
    </script>
}
