<div class="content-wrapper">
    <section class="content-header">
        <h1>
            仓库管理
            <small>入库管理</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> 首页</a></li>
            <li><a href="#">仓库管理</a></li>
            <li class="active">入库管理</li>
        </ol>
    </section>
    <section class="content">
        <div class="row" style="padding-bottom:1px;">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">搜索条件</h3>
                        <div class="box-tools pull-right">
                            <button type="button" id="test" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="input-group">
                            <span class="input-group-addon">日期范围</span>
                            <input type="text" ref="datemin" id="datemin" class="form-control" style="width:120px;">
                            <input type="text" ref="datemax" id="datemax" class="form-control" style="width:120px;margin-left:10px;">

                            <select class="form-control" v-model="StockInType" style="width:150px;margin-left:10px;">
                                <option value="">全部类型</option>
                                @{
                                    if (ViewBag.StockInType != null || ViewBag.StockInType.Count > 0)
                                    {
                                        foreach (var item in ViewBag.StockInType)
                                        {
                                            <option value="@item.DictId">@item.DictName</option>
                                        }
                                    }
                                }
                            </select>
                            <select class="form-control" v-model="StockInStatus" style="width:150px;margin-left:10px;">
                                <option value="">全部状态</option>
                                @{
                                    if (ViewBag.StockInStatus != null || ViewBag.StockInStatus.Count > 0)
                                    {
                                        foreach (var item in ViewBag.StockInStatus)
                                        {
                                            <option value="@item.Key">@item.Value</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="input-group" style="margin-top:5px;margin-left:-10px">
                            <button name="search" v-on:click="searchL" type="submit" class="btn btn-success" style="margin-left:10px;"><i class="fa fa-search"></i> 搜入库</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body">
                        <div id="toolbar" class="btn-group">
                            <!--button id="btn_add" v-on:click="showL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
                            </button>
                            <button id="btn_edit" v-on:click="editL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
                            </button-->
                            <button id="btn_delete" v-on:click="deleteL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
                            </button>
                        </div>
                        <table id="bootstraptable" class="table table-bordered text-nowrap table-hover"></table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section scripts{
    <script src="~/lib/lodop/LodopFuncs.js"></script>
    <script src="~/js/common.wms.js?v=20200627"></script>
    <script type="text/javascript">
        var app = new Vue({
            el: '#app',
            data: {
                datemin: '',
                datemax: '',
                StockInType: '',
                StockInStatus: '',
                stockInList: [],
                stockInDList: [],
                storeId: '0'
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    //显示active
                    _self.$refs.StockIn.parentNode.parentNode.classList.add("active");
                    _self.$refs.StockIn.classList.add("active");
                    _self.$refs.storeId = '@ViewData["currentStoreId"]';
                    _self.$refs.datemin.value = "1900-01-01";
                    _self.$refs.datemax.value = "2099-01-01";
                    //_self.datemin = _self.getCurrentMonthFirst();
                    //_self.datemax = _self.getCurrentMonthLast();
                    $('#datemin').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "zh-CN"
                    });
                    $('#datemax').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "zh-CN"
                    });
                    setTimeout(function () {
                        _self.loadL();
                        yui.getDomById("test").click();
                        $("div[class='pull-right search']")[0].children[0].setAttribute("placeholder", "入库单号或订单号");
                    }, 500);
                });
            },
            methods: {
                loadL: function () {
                    _self = this;
                    var obj = [
                        { checkbox: true, visible: true },
                        { field: 'StockInId', title: 'Id', visible: false },
                        {
                            field: 'StockInStatusValue', title: '操作', align: 'center', sortable: false,
                            formatter: function (value, row, index) {
                                var html = [];
                                if (value == 1) {
                                    html.push('<button id="addDetailL" type="button" class="btn btn-link" style="margin-top:-8px;">添加明细</button>'
                                        , '<button id="auditinL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">审核</button>'
                                    );
                                }
                                else if (value == 2 || value == 3) {
                                    html.push(
                                        '<button id="workL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">操作</button>'
                                    );
                                }
                                html.push(
                                    '<button id="previewL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">打印预览</button>' 
                                );
                                return html.join('');
                            },
                            events: {
                                'click #addDetailL': function (e, value, row, index) {
                                    if (value === 1) {
                                        app.addDetailL(row.StockInId);
                                    } else {
                                        layer.msg("初始转态才允许添加！", { icon: 5 });
                                    }
                                },
                                'click #auditinL': function (e, value, row, index) {
                                    if (value === 1) {
                                        app.auditinL(row.StockInId);
                                    } else {
                                        layer.msg("初始转态才允许审核！", { icon: 5 });
                                    }
                                },
                                'click #workL': function (e, value, row, index) {
                                    app.workL(row.StockInId, row.StockInNo);

                                },
                                'click #previewL': function (e, value, row, index) {
                                    app.previewL(row.StockInId);

                                },
                                'click #printL': function (e, value, row, index) {
                                    app.printL(row.StockInId);
                                }
                            },
                        },
                        { field: 'StockInNo', title: '入库单号', align: 'center', sortable: true },
                        { field: 'OrderNo', title: '订单号', align: 'center', sortable: true },
                        { field: 'StockInTypeName', title: '入库类型', align: 'center', sortable: true },
                        { field: 'OrderNo', title: '生产令号', align: 'center', sortable: true }, 
                        { field: 'StockInStatus', title: '状态', align: 'center', sortable: true, formatter: StockInStatusFormatter },
                        { field: 'Remark', align: 'center', title: '备注' },
                        { field: 'CreateBy', title: '创建人', align: 'center', sortable: true },
                        { field: 'CreateDate', align: 'center', title: '创建时间', sortable: true },
                        { field: 'ModifiedBy', align: 'center', title: '修改人', sortable: true },
                        { field: 'ModifiedDate', title: '修改时间', align: 'center', sortable: true }
                    ];
                    var qParams = {
                        StockInStatus: _self.StockInStatus,
                        StockInType: _self.StockInType
                    };
                    var objSub = [
                        { checkbox: true, visible: true },
                        { field: 'StockInDetailId', title: 'Id', visible: false },
                        {
                            field: 'StatusValue', title: '操作', align: 'center', sortable: false,
                            formatter: function (value, row, index) {
                                return '<button id="previewL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">打印预览</button>';
                                //if (value < 2) {
                                //    return [
                                //        '<button id="deleteDetailL" type="button" class="btn btn-link" style="margin-top:-8px;">删除</button>',
                                //        '<button id="editDetailL" type="button" class="btn btn-link" style="margin-top:-8px;">修改</button>'
                                //    ].join('');
                                //} else if (value < 4) {
                                //    return ['<button id="editDetailL" type="button" class="btn btn-link" style="margin-top:-8px;">修改</button>'].join('');
                                //}else {
                                //    return '';
                                //}
                            },
                            events: {
                                'click #previewL': function (e, value, row, index) {
                                    app.previewL(row.StockInId, row.StockInDetailId);

                                },
                                'click #deleteDetailL': function (e, value, row, index) {
                                    if (value === 1) {
                                        app.deleteDetailL(row.StockInDetailId);
                                    } else {
                                        layer.msg("初始转态才允许添加！", { icon: 5 });
                                    }
                                },
                                'click #editDetailL': function (e, value, row, index) {
                                    if (value != 4) {
                                        app.editDetailL(row.StockInDetailId);
                                    } else {
                                        layer.msg("完成后不可修改！", { icon: 5 });
                                    }
                                },
                            },
                        },
                        { field: 'UniqueIndex', title: '唯一索引', align: 'center', sortable: true },
                        { field: 'MaterialNo', title: '物料编号', align: 'center', sortable: true },
                        { field: 'MaterialName', title: '物料名称', align: 'center', sortable: true },
                        { field: 'PlanInQty', title: '计划数量', align: 'center', sortable: true },
                        { field: 'ActInQty', title: '实际数量', align: 'center', sortable: true },
                        //{ field: 'StorageRackNo', title: '货架编号', align: 'center', sortable: true },
                        //{ field: 'StorageRackName', title: '货架名称', align: 'center', sortable: true },
                        { field: 'Status', title: '状态', align: 'center', sortable: true, formatter: StockInStatusFormatter },
                        { field: 'Remark', align: 'center', title: '备注' },
                        { field: 'CreateBy', title: '创建人', align: 'center', sortable: true },
                        { field: 'CreateDate', align: 'center', title: '创建时间', sortable: true },
                        { field: 'ModifiedBy', align: 'center', title: '修改人', sortable: true },
                        { field: 'ModifiedDate', title: '修改时间', align: 'center', sortable: true }
                    ];

                    yui.table2("bootstraptable", "/StockIn/List", "/StockIn/ListDetail?storeId=@ViewData["currentStoreId"]", obj, objSub, "POST", "StockInId", "StockInId", true, qParams);
                    //yui.table("bootstraptable", "/StockIn/List", obj, "POST", "StockInId", true, qParams);
                },
                showL: function () {
                    yui.layershow("入库", "/StockIn/Add?storeId=@ViewData["currentStoreId"]", 600, 500);
                },
                addDetailL: function (val) {
                    yui.layershow("入库明细", "/StockIn/Detail?storeId=@ViewData["currentStoreId"]&pid=" + val, 600, 500);
                },
                workL: function (val,no) {
                    yui.layershow("入库操作(" + no + ")", "/StockIn/Work?storeId=@ViewData["currentStoreId"]&pid=" + val, 1600, 900);
                },
                previewL: function (stockInId,stockInDetailId) {
                    var _self = this;
                    yui.layershow("预览", "/StockIn/Preview?storeId=@ViewData["currentStoreId"]&pid=" + stockInId + "&detailId=" + stockInDetailId, 1000, 900);
                },
                printL: function (val) {
                    var _self = this;
                    _self.htmlL(val, 2);
                },
                LODOPL: function () {
                    var LODOP = getLodop();
                        return LODOP;
                        //layer.msg("请下载Lodop插件", { icon: 5 });
                },
                formatNull: function (val) {
                    if (typeof (val) == "undefined" || val == "" || val == null || val == " " || val == "null") {
                        return "";
                    }
                    return val;
                },
                formatL: function (val) {
                    return this.jsonDateFormat(val);
                },
                searchL: function () {
                    var qParams = {
                        StockInStatus: _self.StockInStatus,
                        StockInType: _self.StockInType
                    };
                    var query = {
                        silent: true,
                        query: qParams
                    };
                    $("#bootstraptable").bootstrapTable('refresh', query);
                },
                editL: function () {
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        if (arr[0].StockInStatus == 2) {
                            layer.msg("已审核，不允许修改", { icon: 5 });
                            return false;
                        }
                        var index = layer.confirm("您确定要修改吗？", { btn: ["确定", "取消"] }, function () {
                            layer.close(index);
                            var id = arr[0].StockInId;
                            yui.layershow("修改入库", "/StockIn/Add?id=" + id, 600, 500);
                        }, function () {

                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                editDetailL: function (val) {
                    if (val.length > 0) {
                        var index = layer.confirm("您确定要修改明细吗？", { btn: ["确定", "取消"] }, function () {
                            layer.close(index);
                            yui.layershow("修改明细", "/StockIn/Detail?id=" + val + "&storeId=@ViewData["currentStoreId"]", 600, 500);
                        }, function () {

                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                auditinL: function (val) {
                    if (val.length > 0) {
                        var index = layer.confirm("您确定要审核吗？", { btn: ["确定", "取消"] }, function () {
                            yui.$axiosget('/StockIn/Auditin?id=' + val)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        }, function () {

                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                deleteDetailL: function (val) {
                    if (val.length > 0) {
                        var index = layer.confirm("您确定要删除明细吗？", { btn: ["确定", "取消"] }, function () {
                            yui.$axiosget('/StockIn/DeleteDetail?id=' + val)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        }, function () {

                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                deleteL: function () {
                    var _self = this;
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm("您确定要删除吗？", { btn: ["确定", "取消"] }, function () {
                            var id = arr[0].StockInId;
                            yui.$axiosget('/StockIn/Delete?id=' + id)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                }
            }
        });
    </script>
}