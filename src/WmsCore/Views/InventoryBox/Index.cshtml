@section styles{
    <link rel="stylesheet" href="~/css/bootstrap-select.min.css" />
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            仓库管理
            <small>料箱管理</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> 首页</a></li>
            <li><a href="#">仓库管理</a></li>
            <li class="active">料箱管理</li>
        </ol>
    </section>
    <section class="content">
        <div class="row" style="padding-bottom:1px;">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">搜索条件</h3>
                        <div class="box-tools pull-right">
                            <button type="button" id="test" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="input-group">
                            <span class="input-group-addon">日期范围</span>
                            <input type="text" ref="datemin" id="datemin" class="form-control" style="width:120px;">
                            <input type="text" ref="datemax" id="datemax" class="form-control" style="width:120px;margin-left:10px;">
                            <input type="text" v-model="storeId" ref="storeId" id="storeId" style="display:none">
                            <select class="form-control" style="width:150px;margin-left:10px;" v-model="ReservoirAreaId" size="1">
                                <option value="">全部</option>
                                @{
                                    foreach (Wms_reservoirarea item in (Wms_reservoirarea[])ViewData["reservoirAreaList"])
                                    {
                                        <option value="@item.ReservoirAreaId">@item.ReservoirAreaName</option>
                                    }
                                }
                            </select>
                            <select class="form-control" style="width:150px;margin-left:10px;" v-model="Status" size="1">
                                <option value="">全部</option>
                                <option value="0">不在库</option>
                                <option value="1">在库</option>
                                <option value="2">出库中</option>
                                <option value="3">出库完成</option>
                                <option value="4">归库中</option>
                            </select>
                        </div>
                        <div class="input-group" style="margin-top:5px;margin-left:-10px">
                            <button name="search" v-on:click="searchL" type="submit" class="btn btn-success" style="margin-left:10px;"><i class="fa fa-search"></i> 搜料箱</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body">
                        <div id="toolbar" class="btn-group">
                            <button id="btn_add" v-on:click="showL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
                            </button>
                            <button id="btn_edit" v-on:click="editL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
                            </button>
                            <button id="btn_delete" v-on:click="deleteL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
                            </button>
                        </div>
                        <table id="bootstraptable" class="table table-bordered text-nowrap table-hover"></table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section scripts{
    <script src="~/js/bootstrap-select.min.js"></script>
    <script src="~/js/defaults-zh_CN.min.js"></script>
    <script src="~/js/common.wms.js?v=20200627"></script>
    <script type="text/javascript">

        $(function () {
            $('#InventoryBoxId').on('show.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                var divdom = $("div[class='bs-searchbox']")[0].childNodes[0];
                $(divdom).on("input propertychange", function () {
                    var dom = $("li[class='no-results']");
                    var text = divdom.value;
                    if (dom.length > 0) {
                        app.searchInventoryBox(text, 2);
                    }
                    if (app.InventoryBoxList.length <= 0) {
                        app.searchInventoryBox(text, 2);
                    }
                });
            });
        });

        var app = new Vue({
            el: '#app',
            data: {
                datemin: '',
                datemax: '',
                ReservoirAreaId: '',
                StorageRackId: '',
                Status: '',
                InventoryBoxId: '',
                InventoryBoxList: [],
                url: '',
                storeId:'0'
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    //显示active
                    _self.$refs.InventoryBox.parentNode.parentNode.classList.add("active");
                    _self.$refs.InventoryBox.classList.add("active");
                    _self.$refs.storeId = '@ViewData["currentStoreId"]';
                    _self.$refs.datemin.value = '1900-01-01';
                    _self.$refs.datemax.value = '2099-01-01';
                    //_self.datemin = _self.getCurrentMonthFirst();
                    //_self.datemax = _self.getCurrentMonthLast();
                    $('#datemin').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "zh-CN"
                    });
                    $('#datemax').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "zh-CN"
                    });
                    $("#InventoryBoxId").selectpicker({
                        noneSelectedText: '请选择',
                    });
                    _self.searchInventoryBox("", 1);
                    setTimeout(function () {
                        _self.loadL();
                        yui.getDomById("test").click();
                        $("div[class='pull-right search']")[0].children[0].setAttribute("placeholder", "物料编号或名称");
                    }, 500);
                });
            },
            methods: {
                searchInventoryBox: function (val, type) {
                    var _self = this;
                    if (type === 1) {
                        _self.url = "/InventoryBox/Search?storeId=@ViewData["currentStoreId"]";
                    } else {
                        _self.url = "/InventoryBox/Search?storeId=@ViewData["currentStoreId"]&text=" + val;
                    }
                    yui.$axiosget(_self.url).then(function (res) {
                        _self.InventoryBoxList = res.data.rows;
                        var html = "<option value=''>请选择</option>";
                        for (var item in _self.InventoryBoxList) {
                            html += "<option value='" + _self.InventoryBoxList[item].InventoryBoxIdStr + "' " + "data-subtext='" + _self.InventoryBoxList[item].InventoryBoxNo + "'>" + _self.InventoryBoxList[item].InventoryBoxName + "</option>"
                        }
                        if (type !== 1) {
                            $("#InventoryBoxId").empty();
                        }
                        $("#InventoryBoxId").append(html)
                        $('#InventoryBoxId').selectpicker('refresh');
                        //$('#InventoryBoxId').selectpicker('val', _self.InventoryBoxId);
                    }).catch(function (res) {
                    });
                },
                loadL: function () {
                    _self = this;
                    var columns = [
                        { checkbox: true, visible: true },
                        { field: 'InventoryBoxIdStr', title: 'Id', visible: false },
                        {
                            field: '', title: '操作', align: 'center', sortable: false,
                            formatter: function (value, row, index) {
                                var html = [];
                                html.push('<button id="ViewDetailL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">详细</button>');
                                if (row.Status == 0 || row.Status == 'None') {
                                    html.push('<button id="BackL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">新箱入库</button>');
                                }
                                if (row.Status == 1 || row.Status == 'InPosition') {
                                    html.push('<button id="OutL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">出库</button>');
                                }
                                else if (row.Status == 3 || row.Status == 'Outed') {
                                    html.push('<button id="BackL" type="button" class="btn btn-link" style="margin-top:-8px;margin-left:-10px;">归库</button>');
                                }
                                return html.join('');
                            },
                            events: {
                                'click #ViewDetailL': function (e, value, row, index) {
                                    app.ShowDetailL(row.InventoryBoxIdStr);
                                },
                                'click #OutL': function (e, value, row, index) {
                                    app.OutL(row.InventoryBoxIdStr);
                                },
                                'click #BackL': function (e, value, row, index) {
                                    app.BackL(row.InventoryBoxIdStr);
                                }
                            },
                        },
                        { field: 'InventoryBoxNo', title: '料箱编号', align: 'center', sortable: true },
                        { field: 'InventoryBoxName', title: '料箱名称', align: 'center', sortable: true },
                        { field: 'Row', title: '排', align: 'center', sortable: true },
                        { field: 'Column', title: '列', align: 'center', sortable: true },
                        { field: 'Floor', title: '层', align: 'center', sortable: true },
                        { field: 'Size', title: '料箱格数', align: 'center', sortable: true },
                        { field: 'UsedSize', title: '已用格数', align: 'center', sortable: true },
                        { field: 'ReservoirAreaName', title: '库区名称', align: 'center', sortable: true },
                        { field: 'StorageRackName', title: '货架名称', align: 'center', sortable: true },
                        { field: 'Status', title: '状态', align: 'center', sortable: true, formatter: InventoryBoxStatusFormatter },
                        { field: 'Remark', align: 'center', title: '备注' },
                        { field: 'CreateUser', title: '创建人', align: 'center', sortable: true },
                        { field: 'CreateDate', align: 'center', title: '创建时间', sortable: true, formatter: DateTimeFormatter },
                        { field: 'ModifiedUser', align: 'center', title: '修改人', sortable: true },
                        { field: 'ModifiedDate', title: '修改时间', align: 'center', sortable: true, formatter: DateTimeFormatter }
                    ];
                    $("#bootstraptable").bootstrapTable({
                        url: "/InventoryBox/List",
                        method: "POST",
                        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                        toolbar: '#toolbar', //工具按钮用哪个容器
                        striped: true, //是否显示行间隔色
                        cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                        sortable: true, //是否启用排序
                        sortOrder: "desc", //排序方式
                        sortName: "ModifiedDate",
                        pagination: true, //是否显示分页（*）
                        paginationLoop: true,
                        onlyInfoPagination: false,
                        sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
                        pageNumber: 1, //初始化加载第一页，默认第一页,并记录
                        pageSize: 10, //每页的记录行数（*）
                        pageList: [10, 25, 50, 100, 'All'], //可供选择的每页的行数（*）
                        search: true, //是否显示表格搜索
                        strictSearch: false, //设置为 true启用全匹配搜索，否则为模糊搜索。
                        trimOnSearch: true, //设置为 true 将自动去掉搜索字符的前后空格。
                        smartDisplay: true,
                        showPaginationSwitch: false,
                        showColumns: true, //是否显示所有的列（选择显示的列）
                        showHeader: true, //是否显示列头。
                        showFooter: false, //是否显示列脚。
                        showRefresh: true, //是否显示刷新按钮
                        showExport: false, //是否显示导出按钮
                        exportDataType: "all",
                        buttonsAlign: "right", //按钮位置
                        exportTypes: ['csv', 'txt', 'sql', 'doc', 'excel', 'xlsx', 'pdf'], //导出文件类型
                        Icons: 'glyphicon-export',
                        singleSelect: true, //设置 true 将禁止多选。
                        minimumCountColumns: 1, //最少允许的列数
                        clickToSelect: true, //是否启用点击选中行
                        //height: 500,                      //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                        //idField: "Name",
                        uniqueId: "InventoryBoxIdStr", //每一行的唯一标识，一般为主键列
                        showToggle: true, //是否显示详细视图和列表视图的切换按钮
                        showFullscreen: false,
                        cardView: false, //是否显示详细视图
                        detailView: false, //是否显示父子表
                        queryParams: function (params) {
                            var temp = {
                                limit: params.limit,     //页面大小
                                offset: params.offset,   //页码
                                sort: params.sort,      //排序列名
                                order: params.order, //排序命令（desc，asc）
                                search: params.search,
                                storeId: _self.$refs.storeId === null ? 0 : _self.$refs.storeId,
                                datemin: _self.$refs.datemin.value,
                                datemax: _self.$refs.datemax.value,
                                ReservoirAreaId: _self.ReservoirAreaId == "" ? null : _self.ReservoirAreaId,
                                Status: _self.Status == "" ? null : _self.Status
                            }; 
                            return temp;
                        },
                        queryParamsType: 'limit',
                        columns: columns
                    }); 
                },
                showL: function () {
                    yui.layershow("添加料箱", "/InventoryBox/Add?storeId=@ViewData["currentStoreId"]", 550, 600);
                },
                searchL: function () { 
                    $("#bootstraptable").bootstrapTable('refresh');
                },
                editL: function () {
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm("您确定要修改吗？", { btn: ["确定", "取消"] }, function () {
                            layer.close(index);
                            var id = arr[0].InventoryBoxIdStr;
                            yui.layershow("修改料箱", "/InventoryBox/Add?storeId=@ViewData["currentStoreId"]&id=" + id, 550, 600);
                        }, function () {

                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                deleteL: function () {
                    var _self = this;
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm("您确定要删除吗？", { btn: ["确定", "取消"] }, function () {
                            var id = arr[0].InventoryBoxIdStr;
                            yui.$axiosget('/InventoryBox/Delete?id=' + id)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                ShowDetailL: function (val) {
                    yui.layershow("料箱详细", "/InventoryBox/Detail?storeId=@ViewData["currentStoreId"]&id=" + val, 1000, 800);
                },
                OutL: function (val) {
                    var _self = this;
                    var index = layer.confirm("您确定要出库吗？", {
                        btn: ["出库左边", "出库右边", "取消"],
                        btn1: function () {
                            layer.close(index);
                            _self.DoOutL(val, 1);
                        },
                        btn2: function () {
                            layer.close(index);
                            _self.DoOutL(val, 2);
                        }
                    });
                },
                DoOutL: function (boxId, m) {
                    var data = {
                        storeId: @ViewData["currentStoreId"],
                        inventoryBoxId: boxId,
                        pos: m
                    };
                    yui.$axiospostform('/InventoryBox/DoInventoryBoxOut', data)
                        .then(function (response) {
                            if (response.data.isSccuess) {
                                layer.msg(response.data.message, { icon: 1, time: 1000 });
                            } else {
                                layer.msg(response.data.message || errorMsg, { icon: 5 });
                            }
                            _self.searchL();
                        })
                        .catch(function (error) {
                        });

                },
                BackL: function (val) {
                    yui.layershow("料箱归库操作", "/InventoryBox/BoxBack?storeId=@ViewData["currentStoreId"]&inventoryBoxId=" + val, 1000, 800);
                },
            }
        });
    </script>
}