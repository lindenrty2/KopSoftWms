@{
    Layout = "_LayoutH";
    @model YL.Core.Entity.Wms_inventorybox
}
@section styles{
    <style>
        .group-header {
            width: 100%;
            height: 32px;
            background: #3c8dbc;
            color: white;
        }

        .group-body {
            margin: 8px
        }
    </style>
    <link rel="stylesheet" href="~/css/bootstrap-select.min.css" />
    <link rel="stylesheet" href="~/css/vue.element.min.css">
}
    <div id="app" v-cloak>
        <div class="form-group">
            <div class="group-header">
                <label class="control-label ">料箱信息区</label>
            </div>
            <div class="group-body">
                <table>
                    <tr>
                        <td style="width:200px">
                            <label class="control-label">料箱编号</label>
                        </td>
                        <td style="width:200px">
                            <label class="control-label">料箱名</label>
                        </td>
                        <td>
                            <label class="control-label">备注</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Model.InventoryBoxNo
                        </td>
                        <td>
                            @Model.InventoryBoxName
                        </td>
                        <td>
                            @Model.Remark
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="group-header">
                <label class="control-label">操作区</label>
            </div>
            <div class="group-body">
                <el-switch v-model="isStockIn" class="control-label col-sm-2" active-text="入库" inactive-text="出库" ></el-switch>
                <input type="text" v-model="InputNo" style="width:500px" @@keyup.enter="onInputNo">
            </div>
        </div>
        <div class="form-group">
            <div class="group-header">
                <label class="control-label">箱内物料列表</label>
            </div> 
        </div>
        <form class="form-horizontal" onsubmit="return false">
            <el-table :data="tableData" ref="table" tooltip-effect="dark" border stripe>
                <el-table-column label="料格序号" prop="inventoryPosition" align="center"></el-table-column>
                <el-table-column label="物料编号" prop="materialNo" align="center"></el-table-column>
                <el-table-column label="物料名" prop="materialName" align="center"></el-table-column>
                <el-table-column label="生产令号" prop="orderNo" align="center"></el-table-column>
                <el-table-column label="料箱现存数" prop="beforeQty" align="center"></el-table-column>
                <el-table-column label="操作后数量" align="center">
                    <template slot-scope="scope">
                        <!--el-input v-model="scope.row.qty" :maxlength=10 @@change="evidChangeLast(scope.row.qty)"></!--el-input-->
                        <input type="number" style="text-align:center;width:100px" v-model="scope.row.qty" min="1" value="1">
                    </template>
                </el-table-column>
                <el-table-column label="操作">
                    <template slot-scope="scope">
                        <el-button size="mini"
                                   type="danger"
                                   v-if="!scope.row.editing"
                                   icon="el-icon-delete"
                                   @@click="handleDelete(scope.$index)">
                            删除
                        </el-button>
                    </template>
                </el-table-column>
            </el-table>
            <div class="box-footer">
                <div class="pull-right box-tools">
                    <input v-on:click="okL" class="btn btn-primary radius" type="button" v-model="submit">
                </div>
            </div>
        </form>
    </div>

@section scripts{
    <script src="~/js/bootstrap-select.min.js"></script>
    <script src="~/js/defaults-zh_CN.min.js"></script>
    <script src="~/js/vue.element.min.js"></script>
    <script>

        var app = new Vue({
            el: "#app",
            data: {
                InputNo: "",
                tableData: [],
                isStockIn: true,
                submit: "料箱归库",
            },
            computed: {
                count: function () {
                    return this.strLength(this.Remark, false);
                }
            },
            mounted: function(){
                var _self = this;
                _self.$nextTick(function () {
                    _self.refreshDetail();
                });
            },
            methods: {
                handleDelete: function (index) { //删除行数
                    this.tableData.splice(index, 1)
                },
                refreshDetail: function () {
                    _self = this;
                    var url = "/InventoryBox/BackDetailList?storeId=@ViewData["currentStoreId"]&id=@Model.InventoryBoxId";
                        yui.$axiosget(url).then(function (res) {
                            if (res.data.isSccuess) {
                                _self.tableData = res.data.data;
                            }
                            else {
                                layer.msg(res.data.message, { icon: 2 });
                            }
                        }).catch(function (res) {
                            layer.msg("查询料箱列表发生错误" + res, { icon: 2 });
                        });
                },
                onInputNo: function (e) {
                    var _self = this;
                    var inputNo = e.srcElement.value; 
                    if (inputNo.length == 0) { return; }
                    else if (IsMaterialNo(inputNo)) {
                        for (var i = 0; i < _self.tableData.length; i++) {
                            var material = _self.tableData[i];
                            if (material.materialNo == inputNo && material.orderNo ) {
                                var bQty = parseInt(material.qty);
                                if (this.isStockIn) {
                                    material.qty = bQty + 1;
                                }
                                else { 
                                    if (bQty > 0) {

                                        material.qty = bQty - 1;
                                    }
                                    else {
                                        layer.msg("料箱中物料数量不足" + res, { icon: 2 }); 
                                    }
                                }
                                app.InputNo = "";
                                return;
                            }
                        }
                        if (!this.isStockIn) {
                            layer.msg("料箱中没有找到指定的物料" + res, { icon: 2 }); 
                            return;
                        }
                        var url = "/Material/SearchMaterialNo?storeId=@ViewData["currentStoreId"]&materialNo=" + inputNo;
                        yui.$axiosget(url).then(function (res) {
                            if (res.data.data == null) { 
                                layer.msg(res.data.message, { icon: 2 });
                            }
                            else {
                                var list = {
                                    materialId: res.data.data.materialId,
                                    materialNo: res.data.data.materialNo,
                                    materialName: res.data.data.materialName,
                                    orderNo: res.data.data.orderNo,
                                    beforeQty: 0, 
                                    qty: 1,
                                }
                                _self.tableData.unshift(list);
                            }
                        }).catch(function (res) {
                            layer.msg("物料查询发生错误" + res, { icon: 2 });
                        });
             
                    }
                    app.InputNo = "";
                },
                okL: function () {
                    var _self = this;
                    var index = layer.confirm("请人工确认接驳台上料箱是: @Model.InventoryBoxNo <br/> 您确定要归库吗？", {
                        btn: ["归库左边", "归库右边", "取消"],
                        btn1: function() {
                            _self.DoBack(1);
                        },
                        btn2: function() {
                            _self.DoBack(2);
                        }
                    }
                    );
                },
                DoBack: function (pos) {

                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                    var data = { 
                        storeId: '@ViewData["currentStoreId"]',
                        mode:3,
                        inventoryBoxTaskId: '@ViewData["InventoryBoxTaskId"]',
                        details: this.tableData,
                        pos: pos
                    };
                    yui.$axiospostform('/InventoryBox/DoInventoryBoxBack', data)
                        .then(function (response) {
                            if (response.data.isSccuess) {
                                layer.msg(response.data.message, { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 1000);
                                return false;
                            }
                            else {
                                layer.msg(response.data.message, { icon: 5 });
                            }
                            layer.close(index);
                        })
                        .catch(function (error) {
                            layer.close(index);
                        });
                },
                refresh: function (id) {
                    var ctlPlanQty = $(".PlanQty" + id);
                    var ctlQty = $(".Qty" + id);
                    var ctlBoxQty = $(".BoxQty" + id);
                    var qty = Number(ctlQty.val());
                    var planQty = ctlPlanQty.prop("PlanQty");
                    var complateQty = ctlPlanQty.prop("ComplateQty");
                    var beforeQty = ctlPlanQty.prop("BeforeQty");

                    ctlPlanQty.text(complateQty + "(" + qty + ")" + "/" + planQty);
                    ctlBoxQty.text(beforeQty + "=>" + beforeQty + qty);
                }
            }
        });
    </script>
}