@using YL.Utils.Extensions;
@{
    Layout = "_LayoutH";
    @model Wms_inventorybox
}
<div id="app" v-cloak>
    <form class="form-horizontal" onsubmit="return false">
        <div class="box-body">
            <div class="form-group">
                <label class="col-sm-2 control-label">料箱编号</label>
                <div class="col-sm-10">
                    <input class="form-control" v-model="InventoryBoxNo" v-focus type="text">
                </div>
            </div>
            <yl-input lable="料箱名称" v-model="InventoryBoxName"></yl-input>
            <div class="form-group">
                <label class="col-sm-2 control-label">格数</label>
                <div class="col-sm-10">
                    <input type="number" style="text-align:center;width:60px" v-model="Size" min="1" value="1">
                </div>
            </div>
            @await Component.InvokeAsync("Warehouse")
            <div class="form-group">
                <label class="form-label col-sm-2">当前库区</label>
                <div class="col-sm-10">
                    <select class="form-control" v-model="ReservoirAreaId" size="1">
                        <option value="">未部署</option>
                        <template v-for="item in rlist">
                            <option :value="item.ReservoirAreaId">{{item.ReservoirAreaName}}</option>
                        </template>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="form-label col-sm-2">当前货架</label>
                <div class="col-sm-10">
                    <select class="form-control" v-model="StoragerackId" size="1">
                        <option value="">未部署</option>
                        <template v-for="item in slist">
                            <option :value="item.StorageRackId">{{item.StorageRackName}}</option>
                        </template>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="form-label col-sm-2">状态(请勿轻易修改)</label>
                <div class="col-sm-10">
                    <select class="form-control" v-model="Status" size="1">
                        <option value="0">未部署</option>
                        <option value="1">在库</option>
                        <option value="2">出库中</option>
                        <option value="3">出库完成</option>
                        <option value="4">归库中</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">备注</label>
                <div class="col-sm-10">
                    <textarea v-model.trim="Remark" class="form-control" rows="3" placeholder="备注...100个字符以内"></textarea>
                    <p class="textarea-numberbar"><em class="textarea-length">{{count}}</em>/100</p>
                </div>
            </div>
        </div>
        <div class="box-footer">
            <div class="pull-right box-tools">
                <input v-on:click="addL" class="btn btn-primary radius" type="submit" v-model="submit">
            </div>
        </div>
    </form>
</div>
@section scripts{
    <script type="text/x-template" id="yl-select">
        <div class="form-group">
            <label class="form-label col-sm-2">{{lable}}</label>
            <div class="col-sm-10">
                <select class="form-control" v-bind:value="value" v-on="inputListeners" size="1">
                    <option value="">{{option}}</option>
                    <template v-for="item in list">
                        <option :value="item.value">{{item.name}}</option>
                    </template>
                </select>
            </div>
        </div>
    </script>
    <script type="text/x-template" id="yl-input">
        <div class="form-group">
            <label class="form-label col-sm-2">{{lable}}</label>
            <div class="col-sm-10">
                <input :id="id" class="form-control" type="text"
                       v-bind:value="value" v-on="inputListeners">
            </div>
        </div>
    </script>
    <script>
        //v-on:input="$emit('input', $event.target.value)"
        var app = new Vue({
            el: "#app",
            data: {
                submit: "添加",
                InventoryBoxId:"@Model.InventoryBoxId",
                InventoryBoxNo: "@Model.InventoryBoxNo",
                InventoryBoxName: "@Model.InventoryBoxName",
                Size: "@Model.Size",
                Remark: "@Model.Remark",
                WarehouseId: "@Model.WarehouseId",
                ReservoirAreaId: "@Model.ReservoirAreaId",
                StoragerackId: "@Model.StorageRackId",
                Status:@Model.Status.ToByte(),
                rlist: [],//库区
                slist: []//货架
            },
            computed: {
                count: function () {
                    return this.strLength(this.Remark, false);
                }
            },
            watch: {
                WarehouseId: function () {
                    var _self = this;
                    _self.loadL(_self.WarehouseId,1);
                },
                ReservoirAreaId: function () {
                    var _self = this;
                    _self.loadL(_self.ReservoirAreaId,2);
                },
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    if (_self.WarehouseId.length >0) {
                        _self.loadL(_self.WarehouseId, 1);
                    }
                    if (_self.ReservoirAreaId.length >0) {
                        //console.info(_self.ReservoirAreaId);
                        _self.loadL(_self.ReservoirAreaId, 2);
                    }
                });
            },
            methods: {
                loadL: function (id,type) {
                    var _self = this;
                    if (type === 1) {
                        yui.$axiosget('/StorageRack/GetReservoirarea2?storeId=@ViewData["currentStoreId"]&id=' + id).then(function (response) {
                            _self.rlist = response.data;
                        });
                    } else {
                        yui.$axiosget('/StorageRack/GetStoragerack?storeId=@ViewData["currentStoreId"]&id=' + id).then(function (response) {
                            _self.slist = response.data;
                        });
                    }
                },
                addL: function () {
                    var _self = this;
                    if (_self.InventoryBoxNo.length <= 0) {
                        layer.msg("物料编号不能为空", { icon: 2 });
                        return false;
                    }
                    if (_self.InventoryBoxName.length <= 0) {
                        layer.msg("物料名称不能为空", { icon: 2 });
                        return false;
                    }
                    if (_self.Size.length <= 0) {
                        layer.msg("请输入格数", { icon: 2 });
                        return false;
                    }
                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                    var data = {
                        id: _self.InventoryBoxId,
                        storeId: _self.WarehouseId,
                        InventoryBoxNo: _self.InventoryBoxNo,
                        InventoryBoxName: _self.InventoryBoxName,
                        Size: _self.Size,
                        WarehouseId: _self.WarehouseId,
                        ReservoirAreaId: _self.ReservoirAreaId,
                        StoragerackId: _self.StoragerackId,
                        Status: _self.Status,
                        Remark: _self.Remark
                    };
                    yui.$axiospostform('/InventoryBox/AddOrUpdate', data)
                        .then(function (response) {
                            if (response.data.Item1 === 101) {
                                layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                    tips: [1, '#3595CC'],
                                    time: 3000
                                });
                                layer.close(index);
                                return false;
                            }
                            if (response.data.Item1) {
                                layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 500);
                            } else {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            }
                            layer.close(index);
                        })
                        .catch(function (error) {
                            layer.close(index);
                        });
                }
            }
        });
    </script>
}